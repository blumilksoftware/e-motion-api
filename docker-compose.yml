version: '3.8'

services:
  web:
    image: nginx:1.23-alpine
    container_name: escooters-web
    volumes:
      - ./environment/dev/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - .:/application
    ports:
      - ${EXTERNAL_WEBSERVER_PORT:-80}:80
    networks:
      - escooters-dev
    restart: unless-stopped
    depends_on:
      - php
      - database
      - redis
      - mailhog

  php:
    build:
      context: environment/dev/php
    container_name: escooters-php
    working_dir: /application
    user: ${CURRENT_UID:-1000}
    volumes:
      - .:/application
      - ./environment/dev/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - escooters-dev
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy

  database:
    image: mysql:8.0
    container_name: escooters-db-dev
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - ${EXTERNAL_DATABASE_PORT:-3306}:3306
    volumes:
      - escooters-mysql-data:/var/lib/mysql
    networks:
      - escooters-dev
    restart: unless-stopped
    healthcheck:
      test: "/usr/bin/mysql --user=${DB_USERNAME} --password=${DB_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10

  database-test:
    image: mysql:8.0
    container_name: escooters-db-test
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - ${EXTERNAL_TEST_DATABASE_PORT:-3307}:3306
    networks:
      - escooters-dev
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: escooters-redis
    ports:
      - ${EXTERNAL_REDIS_PORT:-5852}:6379
    volumes:
      - escooters-redis-data:/var/lib/redis
    networks:
      - escooters-dev
    restart: unless-stopped

  node:
    image: node:19.5-alpine3.16
    container_name: escooters-node
    working_dir: /application
    volumes:
      - .:/application
    ports:
      - ${EXTERNAL_NODE_PORT:-3000}:3000
    networks:
      - escooters-dev
    stdin_open: true
    tty: true
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: escooters-mailhog
    ports:
      - ${EXTERNAL_MAILHOG_PORT:-5855}:1025
      - ${EXTERNAL_MAILHOG_DASHBOARD_PORT:-5856}:8025
    networks:
      - escooters-dev
    restart: unless-stopped

networks:
  escooters-dev:
    driver: bridge

volumes:
  escooters-mysql-data:
    name: escooters-mysql-data
  escooters-redis-data:
    name: escooters-redis-data
